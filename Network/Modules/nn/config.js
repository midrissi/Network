exports.RELATIONS = {	USER_ROLE: {		DC1: {			relationCollection: 'groupRelations',			relatedAttribute: 'user',			ID_attr: 'ID'		},		DC2: {			relationCollection: 'userRelations',			relatedAttribute: 'group',			ID_attr: 'ID'		},		RELATION_DC: 'User_Group',		ERRORS: {			'alreadyExists': {				error: 301,				errorMessage: "This user is already in that group"			},			'DC1Empty': {				error: 302,				errorMessage: "User can not be empty"			},			'DC2Empty': {				error: 303,				errorMessage: "Group cannot be empty"			}		}	},	HOST_NETWORK: {		DC1: {			relationCollection: 'h_Ns',			relatedAttribute: 'host',			ID_attr: 'ID'		},		DC2: {			relationCollection: 'h_Ns',			relatedAttribute: 'network',			ID_attr: 'ID'		},		RELATION_DC: 'Host_Network',		ERRORS: {			'alreadyExists': {				error: 301,				errorMessage: "This host is already in that network"			},			'DC1Empty': {				error: 302,				errorMessage: "Host can not be empty"			},			'DC2Empty': {				error: 303,				errorMessage: "Network cannot be empty"			}		}	}}exports.ERRORS = {	CONFIG: {		'typeMismatch': {			error: 210,			errorMessage: "The type mismatches! ... check your configuration file."		},		'noNNRelation': {			error: 211,			errorMessage: "No NN relation with that dataclasses."		},		'noDCWithThatName': {			error: 212,			errorMessage: "No dataclasses with that name."		},		'inexpectedParam': {			error: 213,			errorMessage: "Inexpected parameter."		}	}}exports.META = {	GROUPS_DO_NOT_SYNC: ["Admin"]}